Description
一对成熟的兔子每天能且只能产下一对小兔子，每次都生一公一母，每只小兔子的成熟期是1天，小兔子出生后隔一天才能再生小兔子。第一天某人领养了一对成熟的兔子，一公一母，请问第N天以后，他将会得到多少对兔子。

Input
输入为一个整数n(1 ≤ n ≤ 90)。

Output
对应输出第n天有几对兔子(假设没有兔子死亡现象，而且是一夫一妻制)。

Sample
Input 
2
Output 
2



//解决本题的办法是写出来每天的对数，从而找出规律。
#include<iostream>
//标准库非常的庞大，所以程序员在选择的类的名称或
//函数名时就很有可能和标准库中的某个名字相同。所
//以为了避免这种情况所造成的名字冲突，就把标准库
//中的一切都放在名字空间std中，详见https://blog.csdn.net/runningampH/article/details/24229973?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522162833072016780265433868%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&request_id=162833072016780265433868&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~sobaiduend~default-2-24229973.first_rank_v2_pc_rank_v29&utm_term=using+namespace+std%3B&spm=1018.2226.3001.4187
using namespace std;
int main()
{
    int n;
    //long long很重要，这是c++的招牌，大于100直接long long。
    long long f[91];
    //cin不会像scanf压缩数据导致溢出或者遇空格
    //中断，使数据后半部分残留在缓冲区，导致下一
    //次的输入无法输入，只是将上一次的残存在缓冲
    //区的数据当成自己的输入详见https://www.jb51.net/article/115270.htm
    //但是速度慢于scanf，详见https://www.zhihu.com/question/56295735/answer/1544380967
    //提升cin速度的方法是https://blog.csdn.net/qq_33248299/article/details/52144485
    //也就是下一行
    std::ios::sync_with_stdio(false);  
    while (cin>>n) {
        f[1]=1;
        f[2]=2;
        for (int i=3;i<=n;i++) {
            f[i]=f[i-1]+f[i-2];
        }
        cout<<f[n]<<endl;
    }
    return 0;
}
